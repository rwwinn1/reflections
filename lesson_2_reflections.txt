What happens when you initialize a repository? Why do you need to do it?
The .git directory is created, but no commits are created. This command puts the directory under
revision control of git.

How is the staging area different from the working directory and the repository? What value do you think it offers?
It is an area for files to be added to the repository but have not been committed. This seperates out files you eventually
want to commit from those that you don't want in the repository.

How can you use the staging area to make sure you have one commit per logical change?
Just put stuff into the staging area that makes sense to commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When you want to try something different in the code but want to preserve the main branch. A branch lets you "branch out"
and try new things without affecting your base code.

How do the diagrams help you visualize the branch structure?
They show the parent child relations of the commits.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
The branches become a new single branch with the checked out branch receiving the changes.
We are able now to delete the old branch since all of its changes are now merged into the main branch, though
the commits are preserved in the history of commits, sorted by timestamp.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Automatic merging is convenient, but may not be accurate. Manual changes are most accurate, but time consuming.